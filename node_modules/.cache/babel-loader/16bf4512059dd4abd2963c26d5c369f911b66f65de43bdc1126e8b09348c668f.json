{"ast":null,"code":"var _jsxFileName = \"/home/nikita/resoluteai/src/components/Date/Date.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DateTime = _ref => {\n  let {\n    heading,\n    ...props\n  } = _ref;\n  const current = new Date();\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  const date = `${current.getDate()} ${months[current.getMonth()]} ${current.getFullYear()}`;\n  const time = `${current.getHours()}:${current.getMinutes()}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"date\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-semibold text-base \",\n          children: props.heading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = DateTime;\nexport default DateTime;\nvar _c;\n$RefreshReg$(_c, \"DateTime\");","map":{"version":3,"names":["React","DateTime","heading","props","current","Date","months","date","getDate","getMonth","getFullYear","time","getHours","getMinutes"],"sources":["/home/nikita/resoluteai/src/components/Date/Date.jsx"],"sourcesContent":["import React from \"react\";\n\nconst DateTime = ({ heading, ...props }) => {\n  const current = new Date();\n\n  const months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  const date = `${current.getDate()} ${\n    months[current.getMonth()]\n  } ${current.getFullYear()}`;\n  const time = `${current.getHours()}:${current.getMinutes()}`;\n\n  return (\n    <div className=\"date\">\n      <div className=\"flex flex-col\">\n        <div>\n          <p className=\"font-semibold text-base \">{props.heading}</p>\n        </div>\n        <div className=\"flex\">\n\n          <p>{date}</p>\n          <p>{time}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DateTime;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,QAAQ,GAAG,QAA2B;EAAA,IAA1B;IAAEC,OAAO;IAAE,GAAGC;EAAM,CAAC;EACrC,MAAMC,OAAO,GAAG,IAAIC,IAAI,EAAE;EAE1B,MAAMC,MAAM,GAAG,CACb,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;EAED,MAAMC,IAAI,GAAI,GAAEH,OAAO,CAACI,OAAO,EAAG,IAChCF,MAAM,CAACF,OAAO,CAACK,QAAQ,EAAE,CAC1B,IAAGL,OAAO,CAACM,WAAW,EAAG,EAAC;EAC3B,MAAMC,IAAI,GAAI,GAAEP,OAAO,CAACQ,QAAQ,EAAG,IAAGR,OAAO,CAACS,UAAU,EAAG,EAAC;EAE5D,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA,uBACnB;MAAK,SAAS,EAAC,eAAe;MAAA,wBAC5B;QAAA,uBACE;UAAG,SAAS,EAAC,0BAA0B;UAAA,UAAEV,KAAK,CAACD;QAAO;UAAA;UAAA;UAAA;QAAA;MAAK;QAAA;QAAA;QAAA;MAAA,QACvD,eACN;QAAK,SAAS,EAAC,MAAM;QAAA,wBAEnB;UAAA,UAAIK;QAAI;UAAA;UAAA;UAAA;QAAA,QAAK,eACb;UAAA,UAAII;QAAI;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACT;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,KArCIV,QAAQ;AAuCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}